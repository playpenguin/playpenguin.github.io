<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PlayPenguin.Tech-花花企鹅.技术</title><link href="/" rel="alternate"></link><link href="/feeds/qi-ta.atom.xml" rel="self"></link><id>/</id><updated>2012-03-04T05:15:00+08:00</updated><entry><title>MinGW/Codelite 如何生成正确的dll文件</title><link href="/mingwcodelite-ru-he-sheng-cheng-zheng-que-de-dllwen-jian.html" rel="alternate"></link><updated>2012-03-04T05:15:00+08:00</updated><author><name>dangbinghoo</name></author><id>tag:,2012-03-04:mingwcodelite-ru-he-sheng-cheng-zheng-que-de-dllwen-jian.html</id><summary type="html">&lt;p&gt;dll文件里面包括了函数的实现二进制代码段，
在linker输出的时候，通常Cpp会对函数改名，所以名为writestr的函数可能在dll里面表示为writestr&amp;#64;0
这样的名称，所以在输出dll的时候需要使用def文件来处理这些输出的问题&lt;/p&gt;
&lt;p&gt;下面是def文件示例&lt;/p&gt;
&lt;p&gt;LIBRARY example&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;EXPORTS&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;cpystr&amp;#64;0 &amp;#64;1&lt;/div&gt;
&lt;div class="line"&gt;explong&amp;#64;0 &amp;#64;2&lt;/div&gt;
&lt;div class="line"&gt;writestr&amp;#64;4 &amp;#64;3&lt;/div&gt;
&lt;div class="line"&gt;cpystr=cpystr&amp;#64;0&lt;/div&gt;
&lt;div class="line"&gt;explong=explong&amp;#64;0&lt;/div&gt;
&lt;div class="line"&gt;writestr=writestr&amp;#64;4&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;使用=可以对函数名称做别名进行修正，在默认情况下mingw输出的so文件实际就是dll文件，只不过函数名称是加了序号的&lt;/p&gt;
&lt;p&gt;总结用codelite输出正确dll的方法是&lt;/p&gt;
&lt;p&gt;在链接参数里加 -Wl,--out-implib,libexp.a,--output-def,exp2.def&lt;/p&gt;
&lt;p&gt;这样编译器会自动输出一个当前编译出来的so文件的导出函数列表，当然是加了数字序号之类的，所以你需要更名，复制一份按上面的语法添加别名，然后存为exp.def文件&lt;/p&gt;
&lt;p&gt;这样postbuild里面再用这样的语句重新输出dll文件，g++ -Wall -shared -o
exp.dll Release/exp.dll -d exp.def&lt;/p&gt;
&lt;p&gt;输出之后请使用dll分析查看工具Viewdll.exe
和Depends.exe检验下，看看导出名称是否正确，然后dll依赖是否存在就可以了。&lt;/p&gt;
&lt;p&gt;另外，代码里面使用如下语句样式做导出函数&lt;/p&gt;
&lt;p&gt;char * __declspec(dllexport) __stdcall writestr(char *str);&lt;/p&gt;
&lt;p&gt;c++中需要加&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;#ifdef __cplusplus&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;extern &amp;quot;C&amp;quot; {&lt;/div&gt;
&lt;div class="line"&gt;#endif&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr class="docutils" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;#ifdef __cplusplus&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;div class="line"&gt;#endif&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;扩起你的c代码&lt;/p&gt;
</summary></entry></feed>