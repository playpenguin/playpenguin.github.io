<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PlayPenguin.Tech-花花企鹅.技术</title><link href="/" rel="alternate"></link><link href="/feeds/unixwen-dang-gong-ju.atom.xml" rel="self"></link><id>/</id><updated>2011-12-21T11:42:00+08:00</updated><entry><title>再记轻量标记驱动的文档工具与系统</title><link href="/zai-ji-qing-liang-biao-ji-qu-dong-de-wen-dang-gong-ju-yu-xi-tong.html" rel="alternate"></link><published>2011-12-21T11:42:00+08:00</published><updated>2011-12-21T11:42:00+08:00</updated><author><name>dangbinghoo</name></author><id>tag:,2011-12-21:zai-ji-qing-liang-biao-ji-qu-dong-de-wen-dang-gong-ju-yu-xi-tong.html</id><summary type="html">&lt;p&gt;经过一段时间的学习与查阅资料，发现 unix下面实现的各种 轻量标记
文档系统很多，而且格式花样， 在sytax上 有&lt;/p&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;可选的轻量文档标记系统有：&lt;/h2&gt;
&lt;p&gt;Markdown(extra) ，&lt;a class="reference external" href="http://docutils.sourceforge.net/docs/ref/rst/introduction.html"&gt;reStructuredText&lt;/a&gt;, txt2tags, textile, Asciidoc,
等等，发现在sytax风格上有相似，但是又不同，经典&amp;nbsp;Markdown
是不支持表格的，txt2tags
也不怎么完善(虽然我针对html和tex做了hack)，&lt;a class="reference external" href="http://docutils.sourceforge.net/docs/ref/rst/introduction.html"&gt;reStructuredText&lt;/a&gt;&amp;nbsp;和&amp;nbsp;&amp;nbsp;textile
的
ruby实现版本比较完备但又简单，&amp;nbsp;Asciidoc是最复杂的也是最齐全的，基本上元素丰富程度接近与
Docbook 和&amp;nbsp;TeX 系统了，Asciidoc感觉是&amp;nbsp;Docbook的轻量标记版。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sytax"&gt;
&lt;h2&gt;以这些sytax为驱动的文档系统可以选择的有：&lt;/h2&gt;
&lt;p&gt;txt2tags: 输出各种格式，简单，缺点是txt2tags的syntax功能上还是稍显欠缺。&lt;/p&gt;
&lt;p&gt;pandoc:
以markdown为主syntax,但是由于&lt;strong&gt;支持几乎全部syntax&lt;/strong&gt;的各种格式的输入，所以，&amp;nbsp;&lt;a class="reference external" href="http://docutils.sourceforge.net/docs/ref/rst/introduction.html"&gt;reStructuredText&lt;/a&gt;&amp;nbsp;等各种都被比较好的支持，可以支持
比较好的&lt;strong&gt;表格效果&lt;/strong&gt;和&lt;strong&gt;数学公式&lt;/strong&gt;甚至&lt;strong&gt;代码高亮&lt;/strong&gt;输出。&lt;/p&gt;
&lt;p&gt;docutils:&amp;nbsp;&lt;a class="reference external" href="http://docutils.sourceforge.net/docs/ref/rst/introduction.html"&gt;reStructuredText&lt;/a&gt;&amp;nbsp;驱动，支持tex，html输出，python实现，貌似比较常用。&lt;/p&gt;
&lt;p&gt;Sphinx：&lt;a class="reference external" href="http://docutils.sourceforge.net/docs/ref/rst/introduction.html"&gt;reStructuredText&lt;/a&gt;&amp;nbsp;驱动，python实现，支持html，tex输出，在新的python里面项目doc使用比较多。比较成熟。&lt;/p&gt;
&lt;p&gt;asciidoc：
asciidoc驱动，支持比较多的常见格式输出，但是貌似pdf的路径可以通过docbook或者latex，但是都不怎么成熟。但由于syntax的丰富程度最高，所以到docbook之后可以输出比较复杂的文档，如果写大型文档就比较适合了。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;空的时候研究下 pandoc和asciidoc，Sphinx，看看哪种将是自己的alternate.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
</summary><category term="markup"></category><category term="pdf"></category><category term="文档工具"></category><category term="标记"></category></entry><entry><title>txt2tags 与 xelatex输出pdf</title><link href="/txt2tags-yu-xelatexshu-chu-pdf.html" rel="alternate"></link><published>2011-12-12T11:30:00+08:00</published><updated>2011-12-12T11:30:00+08:00</updated><author><name>dangbinghoo</name></author><id>tag:,2011-12-12:txt2tags-yu-xelatexshu-chu-pdf.html</id><summary type="html">&lt;p&gt;txt2tags由于输出target比较多，支持pdf，html，docbook，redmine
wiki，所以基本被我“相中”。&lt;/p&gt;
&lt;p&gt;公司要求写个需求文档，就试着写了下，用自己的写的格式输出tex，再转换xelatex-ctex格式，就发现生成pdf没有问题了，编译完全通过，只不过为了pdf有更好的脸面：
支持标签目录，目录颜色，页眉页脚样式修正就做了个脚本对txt2tags输出的格式做了简单调整，现在一个make，html，pdf就ready了，哈哈！&lt;/p&gt;
&lt;p&gt;下面是我的tex输出心得：&lt;/p&gt;
&lt;p&gt;1.tex系统有N多实现，在windows上ctex不能配置就能工作，在linux上面要安装texlive-cjk相关，安装recommded，extra等包。&lt;/p&gt;
&lt;p&gt;gentoo系统有ebuild，相对简单，ubuntu貌似我现在用的11.10还没包上线(ubuntu
NB,但不专业了).&lt;/p&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;我用xelatex，tex文档开头得改成:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="literal-block"&gt;
documentclass[UTF8,adobefonts,a4paper]{ctexart}
&lt;/pre&gt;
&lt;p&gt;%ctexart就是ctex article了，开始恼了半天。&lt;/p&gt;
&lt;p&gt;3.
adobefonts得有，网上下载的放进/usr/share/fonts下面就行，另外tex的模板得按照网上说的添加隶书等字体支持。&lt;/p&gt;
&lt;p&gt;4. 这下就可以 xelatex your.tex
来编译pdf了，发现一切ok就说明中文支持没有问题了，其实也不难。&lt;/p&gt;
&lt;ol class="arabic simple" start="5"&gt;
&lt;li&gt;修正默认的输出的tex样式：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="literal-block"&gt;
usepackage[bookmarksnumbered,urlcolor=red,linkcolor=blue,colorlinks=true]{hyperref}
usepackage{fancyhdr}
renewcommand{headheight}{15pt}
renewcommand{headrulewidth}{2pt}
renewcommand{footrulewidth}{0.5pt}
pagestyle{fancy}

修改目录链接颜色，url链接颜色为blue，然后使用
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
fancyhdr页眉页脚宏包， 加线。

这样的pdf输出就是比较ok的了

另:
&lt;/pre&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;txt2tags里面可以加锚点，这样pdf，html都可以文内跳转了。&lt;/li&gt;
&lt;li&gt;txt2tags的vim sytax得自己添加。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="literal-block"&gt;
这个是例子比较完善的文档模板：
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
t2t-template.zip
&lt;/pre&gt;
</summary><category term="ctex"></category><category term="pdf"></category><category term="txt2tags"></category></entry><entry><title>各种用来写wiki和文档的light-weight markup 工具</title><link href="/ge-chong-yong-lai-xie-wikihe-wen-dang-de-light-weight-markup-gong-ju.html" rel="alternate"></link><published>2011-12-06T16:58:00+08:00</published><updated>2011-12-06T16:58:00+08:00</updated><author><name>dangbinghoo</name></author><id>tag:,2011-12-06:ge-chong-yong-lai-xie-wikihe-wen-dang-de-light-weight-markup-gong-ju.html</id><summary type="html">&lt;p&gt;&lt;em&gt;wordpress，redmine，wikipedia&lt;/em&gt;
等都支持使用一些标记语言来写wiki页面，其实这些东西都是一种
&lt;strong&gt;&amp;quot;Lightweight_markup_language &amp;quot;&lt;/strong&gt;
,搜索了下发现跟redmine使用的textile类似的东西包括: markdown,
markdown2(extra), txt2tags, AsciiDoc, texy!
,BBcode,Mediawiki等等，都有一个特点
：&lt;strong&gt;*就是使用纯文本标记来标记文档的格式标题等*&lt;/strong&gt;。&lt;/p&gt;
&lt;address&gt;&lt;p&gt;经过比较发现：&lt;/p&gt;
&lt;/address&gt;

 #.

    .. raw:: html

       &lt;address&gt;

    ***AsciiDoc**    最复杂，可以用来写
    文章，书本，与docbook转换比较好，功能上最解决与     docbook，有
    git         manual，Programming iOS 4
    这样的作品都是用它写的，查看其手册的确也很好很强大的感觉。*

    .. raw:: html

       &lt;/address&gt;

 #. **txt2tags**          输出格式多，未来可以支持 redmine wiki，
    wordpress，
 #. **markdown**
    用的最多，存在各种实现，c，python，perl等各种语言的版本，不过好像markdown语言的表格支持不好，初始的实现是不支持表格的，然后支持的现在也没有搞明白是那种实现了。

 github支持 **markdown 语言写的readme 文本**\ 。

 所以，以后写文档或者书籍应该尽可能用这些工具了，不过选择一个通吃所有格式，又简单易用的不是那么容易，
 最好能有个比较好的gui编辑器，支持常见的格式，并且可以预览，然后如果能够直接发布到redmine，wordpress
 wiki那就再好不过了，如果能够转换到docbook，那么再输出成word，pdf等格式也是比较容易的了。</summary><category term="markup"></category><category term="文档工具"></category><category term="标记"></category></entry></feed>